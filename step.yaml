version: '1.0'
kind: step-type
metadata:
  name: datarobot/cg-components
  title: Components
  version: 0.1.0
  isPublic: false
  description: >-
    Takes a list of components, creates the pipelines they've defined,
    and starts them
  sources:
    - 'https://github.com/carsongee/codefresh_components'
  maintainers:
    - name: Carson Gee
      email: carson.gee@datarobot.com
  official: false
  tags:
    - yaml
    - call
    - child
    - pipeline
  icon:
    type: svg
    url: >-
      https://raw.githubusercontent.com/carsongee/codefresh_components/main/icon-1.svg
    background: '#C7DCFF'
  examples:
    - description: Run component pipelines
      workflow:
        run_components:
          title: Build and Run Component Pipelines
          type: datarobot/cg-components
          arguments:
            components:
              - componentA
              - componentB
            yaml_destination: ${{CF_VOLUME_PATH}}/pipelines.yaml
            project: tensorflow
  latest: true
spec:
  arguments: |-
    {
        "definitions": {},
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "additionalProperties": false,
        "patterns": [],
        "required": [
            "components",
            "yaml_destination",
            "project"
        ],
        "properties": {
            "components": {
                "type": "array",
                "description": "List of Components"
            },
            "yaml_destination": {
                "type": "string",
                "description": "Path to where to render the file"
            },
            "project": {
                "type": "string",
                "description": "Project to append pipelines to"
            },
            "DEBUG": {
                "type": "boolean",
                "description": "Set to 'true' to enable debug logging. Default is false."
            }
        }
    }
  delimiters:
    left: '[['
    right: ']]'
  stepsTemplate: |-
    main:
      name: datarobot/cg-components
      title: Info
      image: alpine
      commands:
        - echo "Running [[ len .Arguments.components ]] component pipelines"
    [[ range $index, $component := .Arguments.components ]]
    create_component_pipeline_[[ $index ]]:
      title: "Make Pipeline for [[ $component ]]"
      type: pipeline-trigger-merge
      arguments:
        SPEC: [[ $component ]]/.cicd/codefresh.yml
        TRIGGERS: [[ $component ]]/.cicd/trigger.yml
    [[ end ]]
    render_component_pipelines:
      image: carsongee/codefresh_components
      environment:
        - 'COMPONENT_PIPELINES=[[ range $index, $component := .Arguments.components ]][[ $.Arguments.project ]]/[[ $component ]] [[ end ]]'
        - 'DESTINATION=[[ $.Arguments.yaml_destination ]]'
        - 'CF_BRANCH=${{CF_BRANCH}}'
        - 'CF_REVISION=${{CF_REVISION}}'
        - 'DEBUG=[[ $.Arguments.DEBUG ]]'
    run_component_pipelines:
      title: Start Pipelines
      type: codefresh-run-dynamic
      arguments:
        RUN_LIST_YAML_FILE: [[ $.Arguments.yaml_destination ]]
        WAIT: true
